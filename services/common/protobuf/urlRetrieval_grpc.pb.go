// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.1
// source: protobuf/urlRetrieval.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UrlRetrievalClient is the client API for UrlRetrieval service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UrlRetrievalClient interface {
	GetLongUrl(ctx context.Context, in *GetLongUrlRequest, opts ...grpc.CallOption) (*GetLongUrlResponse, error)
}

type urlRetrievalClient struct {
	cc grpc.ClientConnInterface
}

func NewUrlRetrievalClient(cc grpc.ClientConnInterface) UrlRetrievalClient {
	return &urlRetrievalClient{cc}
}

func (c *urlRetrievalClient) GetLongUrl(ctx context.Context, in *GetLongUrlRequest, opts ...grpc.CallOption) (*GetLongUrlResponse, error) {
	out := new(GetLongUrlResponse)
	err := c.cc.Invoke(ctx, "/UrlRetrieval/GetLongUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UrlRetrievalServer is the server API for UrlRetrieval service.
// All implementations must embed UnimplementedUrlRetrievalServer
// for forward compatibility
type UrlRetrievalServer interface {
	GetLongUrl(context.Context, *GetLongUrlRequest) (*GetLongUrlResponse, error)
	mustEmbedUnimplementedUrlRetrievalServer()
}

// UnimplementedUrlRetrievalServer must be embedded to have forward compatible implementations.
type UnimplementedUrlRetrievalServer struct {
}

func (UnimplementedUrlRetrievalServer) GetLongUrl(context.Context, *GetLongUrlRequest) (*GetLongUrlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLongUrl not implemented")
}
func (UnimplementedUrlRetrievalServer) mustEmbedUnimplementedUrlRetrievalServer() {}

// UnsafeUrlRetrievalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UrlRetrievalServer will
// result in compilation errors.
type UnsafeUrlRetrievalServer interface {
	mustEmbedUnimplementedUrlRetrievalServer()
}

func RegisterUrlRetrievalServer(s grpc.ServiceRegistrar, srv UrlRetrievalServer) {
	s.RegisterService(&UrlRetrieval_ServiceDesc, srv)
}

func _UrlRetrieval_GetLongUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLongUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlRetrievalServer).GetLongUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UrlRetrieval/GetLongUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlRetrievalServer).GetLongUrl(ctx, req.(*GetLongUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UrlRetrieval_ServiceDesc is the grpc.ServiceDesc for UrlRetrieval service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UrlRetrieval_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "UrlRetrieval",
	HandlerType: (*UrlRetrievalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLongUrl",
			Handler:    _UrlRetrieval_GetLongUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/urlRetrieval.proto",
}
